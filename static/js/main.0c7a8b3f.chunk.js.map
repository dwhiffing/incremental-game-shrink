{"version":3,"sources":["App.js","index.js"],"names":["getCost","baseCost","level","pow","Math","floor","App","intervalRef","useRef","interval2Ref","useState","progress","money","upgrade","tickLevel","state","setState","costs","contentLabels","buttonLabels","validators","unlocks","onTick","oldState","onTick2","useCallback","tick","penalty","increment","useEffect","current","clearInterval","setInterval","percent","min","className","style","margin","toFixed","Object","keys","map","key","display","height","alignItems","width","onClick","s","purchase","disabled","fontSize","transform","max","left","top","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c7a8b3f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport './App.css'\n\nconst TARGET_VALUE = 10000\nconst getCost = (baseCost, level, pow = 1.15) =>\n  Math.floor(baseCost * Math.pow(pow, level))\n\nfunction App() {\n  const intervalRef = useRef()\n  const interval2Ref = useRef()\n  const [state, setState] = useState({\n    progress: 1000,\n    money: 10000,\n    upgrade: 1,\n    tickLevel: 0,\n    level: 1,\n  })\n\n  const costs = {\n    level: getCost(5, state.level - 1),\n    tickLevel: getCost(150, state.tickLevel, 2),\n    upgrade: getCost(1000, state.upgrade - 1, 2),\n  }\n  const contentLabels = {\n    level: `$${state.level * state.upgrade} per tick`,\n    tickLevel: `one tick every ${1000 - state.tickLevel * 100}ms`,\n    upgrade: `money x ${state.upgrade}`,\n  }\n  const buttonLabels = {\n    level: 'Upgrade',\n    tickLevel: 'Upgrade tick',\n    upgrade: 'Doubler',\n  }\n  const validators = {\n    level: state.money < costs.level,\n    tickLevel: state.money < costs.tickLevel || state.tickLevel >= 9,\n    upgrade: state.money < costs.upgrade,\n  }\n  const unlocks = {\n    level: 0,\n    tickLevel: 150,\n    upgrade: 1000,\n  }\n\n  const purchase = (key) => {\n    if (costs[key] <= state.money) {\n      setState((s) => ({\n        ...s,\n        [key]: s[key] + 1,\n        money: s.money - costs[key],\n      }))\n    }\n  }\n\n  const onTick = () => {\n    setState((oldState) => {\n      return {\n        ...oldState,\n        money: oldState.money + oldState.level * oldState.upgrade,\n      }\n    })\n  }\n\n  const onTick2 = useCallback(() => {\n    const tick = 1000 - state.tickLevel * 100\n    setState((oldState) => {\n      const penalty = 1 - oldState.progress / TARGET_VALUE\n      const increment = oldState.level * oldState.upgrade * penalty\n      return {\n        ...oldState,\n        progress: oldState.progress + increment / (tick / 10),\n      }\n    })\n  }, [state.tickLevel])\n\n  useEffect(() => {\n    const tick = 1000 - state.tickLevel * 100\n    intervalRef.current && clearInterval(intervalRef.current)\n    intervalRef.current = setInterval(onTick, tick)\n    return () => {\n      clearInterval(intervalRef.current)\n    }\n  }, [state.tickLevel])\n\n  useEffect(() => {\n    interval2Ref.current && clearInterval(interval2Ref.current)\n    interval2Ref.current = setInterval(onTick2, 10)\n    return () => {\n      clearInterval(interval2Ref.current)\n    }\n  }, [onTick2])\n\n  const percent = Math.min(100, (state.progress + 1) / 100)\n\n  return (\n    <div>\n      <div className=\"menu\">\n        <p style={{ margin: '10px' }}>money: ${state.money}</p>\n        <p style={{ margin: '10px' }}>progress: {percent.toFixed(4) + '%'}</p>\n        {Object.keys(costs).map(\n          (key) =>\n            state.progress >= unlocks[key] && (\n              <div\n                key={key}\n                style={{\n                  margin: '10px',\n                  display: 'flex',\n                  height: 40,\n                  alignItems: 'center',\n                }}\n              >\n                <div style={{ width: 250 }}>\n                  <p>{[contentLabels[key]]}</p>\n                </div>\n                <button\n                  onClick={() => purchase(key)}\n                  disabled={validators[key]}\n                  style={{ width: 150, height: 35 }}\n                >\n                  {[buttonLabels[key]]} (${costs[key]})\n                </button>\n              </div>\n            ),\n        )}\n      </div>\n      <section>\n        <div className=\"container\">\n          <p\n            style={{\n              fontSize: '10vw',\n              transform: `scale(${Math.max(1, TARGET_VALUE - state.progress)})`,\n              left: '-1.2vw',\n              top: `${(100 - percent) * 50}%`,\n            }}\n          >\n            If you can read this you win!\n          </p>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}